{"version":3,"sources":["components/index.js","actions/index.js","constants/index.js","index.js","reducers/index.js"],"names":["App","console","log","this","props","value","className","style","margin","textAlign","onClick","positive","negative","reset","Component","connect","state","type","composeEnchancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","action","applyMiddleware","ReactDOM","render","document","querySelector"],"mappings":"4PAKMA,G,uLACQ,IAAD,OAEL,OADAC,QAAQC,IAAIC,KAAKC,MAAMC,OAEnB,yBAAKC,UAAU,oBAAoBC,MAAO,CAAEC,OAAQ,MAAOC,UAAW,WAClE,yBAAKH,UAAU,kCACX,yBAAKA,UAAU,OACX,4BAAQA,UAAU,qBAAqBI,QAAS,kBAAM,EAAKN,MAAMO,aAAjE,eACA,4BAAQL,UAAU,qBAAqBI,QAAS,kBAAM,EAAKN,MAAMQ,aAAjE,eACA,4BAAQN,UAAU,kBAAmBH,KAAKC,MAAMC,OAChD,4BAAQC,UAAU,kBAAkBI,QAAS,kBAAM,EAAKN,MAAMS,UAA9D,yB,GAVNC,cAwBHC,mBANf,SAAyBC,GACrB,MAAO,CACHX,MAAOW,KAIyB,CAAEL,SC3BlB,WACpB,MAAO,CACHM,KCJgB,aF6B4BL,SCrB5B,WACpB,MAAO,CACHK,KCTgB,aF4BsCJ,MCfzC,WACjB,MAAO,CACHI,KCda,WF2BNF,CAAwDf,G,OGtBvE,IAAMkB,EAAoBC,OAAOC,sCAAwCC,IACnEC,EAAQC,aCNC,WAA8C,IAAtBP,EAAqB,uDAAb,IAAKQ,EAAQ,uCAExD,MFJoB,aEIhBA,EAAOP,KACQD,EAAQ,GFJP,aEOhBQ,EAAOP,KACQD,EAAQ,GFPV,UEUbQ,EAAOP,KACQ,EAGZD,IDNLE,EAAkBO,gBAGxBC,IAASC,OACL,kBAAC,IAAD,CAAUL,MAAOA,GACb,kBAAC,EAAD,OAGJM,SAASC,cAAc,Y","file":"static/js/main.adec15b6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { positive, negative, reset } from '../actions';\nimport './index.css'\n\nclass App extends Component {\n    render() {\n        console.log(this.props.value)\n        return (\n            <div className=\"ui grid container\" style={{ margin: '10%', textAlign: 'center' }}>\n                <div className=\"ui twelve wide column centered\">\n                    <div className=\"row\">\n                        <button className=\"ui positive button\" onClick={() => this.props.positive()} >positive + </button>\n                        <button className=\"ui negative button\" onClick={() => this.props.negative()} >negative - </button>\n                        <button className=\"ui blue button\" >{this.props.value}</button>\n                        <button className=\"ui black button\" onClick={() => this.props.reset()} > reset value  </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        value: state\n    };\n}\n\nexport default connect(mapStateToProps, { positive, negative, reset })(App);","import * as types from '../constants';\n\nexport const positive = () => {\n    return {\n        type: types.POSITIVE\n    }\n}\n\nexport const negative = () => {\n    return {\n        type: types.NEGATIVE\n    }\n}\n\nexport const reset = () => {\n    return {\n        type: types.RESET\n    }\n}","export const POSITIVE = 'POSITIVE';\nexport const NEGATIVE = 'NEGATIVE';\nexport const RESET = 'RESET';","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducerProcess from './reducers';\n\nconst composeEnchancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducerProcess\n    , composeEnchancers(applyMiddleware())\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    ,\n    document.querySelector('#root')\n)","import * as types from '../constants';\n\nexport default function reducerProcess(state = 100, action) {\n\n    if (action.type === types.POSITIVE) {\n        return state = state + 10;\n    }\n\n    if (action.type === types.NEGATIVE) {\n        return state = state - 10;\n    }\n\n    if (action.type === types.RESET) {\n        return state = 0;\n    }\n\n    return state;\n}\n"],"sourceRoot":""}